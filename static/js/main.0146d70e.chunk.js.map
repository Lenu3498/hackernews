{"version":3,"sources":["components/News/News.js","components/Searchbar/Searchbar.js","App.js","reportWebVitals.js","index.js"],"names":["News","news","isLoading","isError","className","hits","length","map","newsPost","href","url","target","rel","title","points","author","datetime","created_at","num_comments","objectID","Searchbar","setUrl","useState","inputValue","setInputValue","onKeyDown","keyCode","onChange","value","type","placeholder","onClick","App","setNews","setIsLoading","setIsError","useEffect","a","fetch","response","ok","json","jsonResponse","Error","getNews","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAKe,SAASA,EAAT,GAA6C,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QAC/C,OACF,8BAEIA,EAAW,mFACXD,EACE,gCACD,kDACA,mBAAGE,UAAU,0CAGf,6BACqB,IAAnBH,EAAKI,KAAKC,OAAcL,EAAKI,KAAKE,KAAI,SAACC,GAAD,OACvB,+BACA,mBAAGC,KAAMD,EAASE,IAAKC,OAAO,SAASC,IAAI,aAA3C,SACCJ,EAASK,QAEV,sBAAKT,UAAU,cAAf,UACE,iCAAOI,EAASM,OAAhB,aADF,MAC0C,iCAAON,EAASO,OAAhB,SACzC,+BAAM,cAAC,IAAD,CAASC,SAAUR,EAASS,eAFnC,MAE4DT,EAASU,aAFrE,iBAJSV,EAASW,aAWvB,uF,MC1BA,SAASC,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAChC,EAAmCC,mBAAS,KAA5C,mBAAMC,EAAN,KAAkBC,EAAlB,KA6BF,OACE,sBAAKpB,UAAU,uBAAf,UACI,uBACIA,UAAU,mBACVqB,UA/BR,YACmB,KADkB,EAAVC,SAErBL,EAAO,6CAAD,OAA8CE,KA8BlDI,SA1BR,YAAoC,IAAThB,EAAQ,EAARA,OACvBa,EAAcb,EAAOiB,QA2BjBC,KAAK,SACLD,MAAOL,EACPO,YAAY,aAChB,wBAEIC,QAAS,kBACTV,EAAO,6CAAD,OAA8CE,KAHxD,SAKI,mBAAGnB,UAAY,sBCkBZ4B,MA7Df,WACE,MAAwBV,mBAAS,CAAEjB,KAAM,KAAzC,mBAAOJ,EAAP,KAAagC,EAAb,KAEA,EAAsBX,mBAAS,oDAA/B,mBAAOZ,EAAP,KAAYW,EAAZ,KACA,EAAkCC,oBAAS,GAA3C,mBAAOpB,EAAP,KAAkBgC,EAAlB,KACA,EAA8BZ,oBAAS,GAAvC,mBAAOnB,EAAP,KAAgBgC,EAAhB,KA8BA,OA3BAC,qBAAU,YACK,uCAAG,8BAAAC,EAAA,6DACdF,GAAW,GACXD,GAAa,GAFC,kBAIQI,MAAM5B,GAJd,YAIT6B,EAJS,QAKAC,GALA,iCAMeD,EAASE,OANxB,cAMNC,EANM,OAQZT,EAAQS,GACRR,GAAa,GATD,iCAYR,IAAIS,MAAM,mBAZF,kCAcdR,GAAW,GAdG,0DAAH,qDAoBfS,KACC,CAAClC,IAMA,sBAAKN,UAAU,MAAf,UAEE,wBAAQA,UAAU,SAAlB,SACI,+CAGJ,cAAC,EAAD,CAAWA,UAAU,YACrBH,KAAMA,EACNS,IAAKA,EACLW,OAAQA,IAKR,+BACA,cAAC,EAAD,CAAMpB,KAAMA,EAAMC,UAAWA,EAAWC,QAASA,EAASgC,WAAaA,MAGvE,wBAAQ/B,UAAU,SAAlB,SACE,gDChDOyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0146d70e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TimeAgo from 'timeago-react'; \r\nimport \"./News.css\";\r\n\r\n\r\nexport default function News ({ news, isLoading, isError}) {\r\n  return (\r\n<div>\r\n{\r\n    isError ? (<h4>Failed to load results, something went wrong ... </h4>) : (\r\n    isLoading ? (\r\n      <div>\r\n     <div>Loading news...</div>\r\n     <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\r\n     </div>\r\n    ) : (\r\n   <ol>\r\n    {news.hits.length!==0 ? (news.hits.map((newsPost) => (\r\n                    <li key={newsPost.objectID}>\r\n                    <a href={newsPost.url} target=\"_blank\" rel=\"noreferrer\">\r\n                    {newsPost.title}\r\n                    </a>\r\n                    <div className=\"information\">\r\n                      <span>{newsPost.points} points</span> | <span>{newsPost.author} | </span>   \r\n                     <span><TimeAgo datetime={newsPost.created_at} /></span> | {newsPost.num_comments} comments\r\n                     </div>\r\n                </li>\r\n\r\n\r\n        ))) : (<h4> No results match your search, please try again. </h4>)\r\n        }\r\n    </ol>\r\n    )\r\n    )\r\n}\r\n  </div>\r\n);\r\n}","import React, { useState } from 'react';\r\nimport \"./Searchbar.css\";\r\n\r\nexport default function Searchbar({ setUrl }) {\r\n    const[inputValue, setInputValue] = useState(\" \");\r\n\r\n    function handleOnKeyDown({ keyCode }){\r\n        if(keyCode === 13) {\r\n          setUrl(`http://hn.algolia.com/api/v1/search?query=${inputValue}`)\r\n      }\r\n    }\r\n\r\n    function handleInputValue({target}){\r\n        setInputValue(target.value);\r\n    }\r\n\r\n  //function compareInput(){\r\n    //let searchString = inputValue.toLowerCase().split(' ')\r\n    //console.log(news.hits.filter(string => {\r\n      //  let containsAtLeastOneWord = false;\r\n        // If at least a word is matched return it!\r\n        //searchString.forEach(word => {\r\n          //  if (string.title.toLowerCase().includes(word))\r\n            //    containsAtLeastOneWord = true;\r\n        //})\r\n        //if (containsAtLeastOneWord)\r\n          //  return string\r\n    //}));\r\n\r\n        // if(news.contains())\r\n        // const results = news.filter()\r\n  //}\r\n\r\n  return (\r\n    <div className=\"container__searchbar\">\r\n        <input \r\n            className=\"input__searchbar\"\r\n            onKeyDown={handleOnKeyDown} \r\n            onChange={handleInputValue}\r\n            //{event => setQuery(event.target.value)}\r\n            type=\"search\" \r\n            value={inputValue}\r\n            placeholder=\"Search..\"/>\r\n        <button\r\n            //type=\"button\"\r\n            onClick={() =>\r\n            setUrl(`http://hn.algolia.com/api/v1/search?query=${inputValue}`)\r\n        }>\r\n            <i className = \"fa fa-search\"></i>\r\n        </button>\r\n\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\nimport News from './components/News/News.js'\r\nimport Searchbar from './components/Searchbar/Searchbar.js'\r\n\r\nfunction App() {\r\n  const [news, setNews] = useState({ hits: []});\r\n  // const [query, setQuery] = useState('');\r\n  const [url, setUrl] = useState('https://hn.algolia.com/api/v1/search?query=react',);\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isError, setIsError] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    const getNews = async () => {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n    try {\r\n     const response = await fetch(url)\r\n       if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        // console.log(jsonResponse);\r\n        setNews(jsonResponse);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      throw new Error(\"Request Failed!\");\r\n    } catch (error) {\r\n      setIsError(true);\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  getNews();\r\n}, [url]);\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <header className=\"header\">\r\n          <h1>HACKER NEWS</h1>    \r\n      </header>\r\n\r\n      <Searchbar className=\"searchbar\" \r\n      news={news} \r\n      url={url} \r\n      setUrl={setUrl} \r\n      // query={query} \r\n      // setQuery={setQuery}\r\n      />\r\n      \r\n      <main>\r\n      <News news={news} isLoading={isLoading} isError={isError} setIsError= {setIsError}/>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <p>Â© 2021</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}