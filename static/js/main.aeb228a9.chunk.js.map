{"version":3,"sources":["components/News/News.js","components/Searchbar/Searchbar.js","App.js","reportWebVitals.js","index.js"],"names":["News","news","isLoading","console","log","length","hits","map","newsPost","href","url","target","rel","title","points","author","datetime","created_at","num_comments","objectID","Searchbar","setUrl","query","setQuery","onKeyDown","keyCode","onChange","event","value","type","placeholder","onClick","className","App","useState","setNews","setIsLoading","useEffect","a","fetch","response","ok","json","jsonResponse","Error","getNews","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAIe,SAASA,EAAT,GAAoC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UAEnC,OADAC,QAAQC,IAAIH,GAEV,gCACI,yCAECC,EACA,kDAED,6BACe,IAAdD,EAAKI,QAAcJ,EAAKK,KAAKC,KAAI,SAACC,GAAD,OAChC,+BACI,mBAAGC,KAAMD,EAASE,IAAKC,OAAO,SAASC,IAAI,aAA3C,SACCJ,EAASK,QAEV,gCACE,iCAAOL,EAASM,OAAhB,aADF,MAC0C,iCAAON,EAASO,OAAhB,SACzC,+BAAM,cAAC,IAAD,CAASC,SAAUR,EAASS,eAFnC,MAE4DT,EAASU,aAFrE,eAGA,0BAPKV,EAASW,kB,MCZb,SAASC,EAAT,GAAgD,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SA8BjD,OACE,gCACI,uBACIC,UA9BR,YACmB,KADkB,EAAVC,SAErBJ,EAAO,6CAAD,OAA8CC,KA6BlDI,SAAU,SAAAC,GAAK,OAAIJ,EAASI,EAAMhB,OAAOiB,QACzCC,KAAK,OACLD,MAAON,EACPQ,YAAY,aAChB,wBACID,KAAK,SACLE,QAAS,kBACTV,EAAO,6CAAD,OAA8CC,KAHxD,SAMI,mBAAGU,UAAY,sBCEZC,MA5Cf,WACE,MAAwBC,mBAAS,CAAE5B,KAAM,KAAzC,mBAAOL,EAAP,KAAakC,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAOZ,EAAP,KAAcC,EAAd,KACA,EAAsBW,mBACtB,oDADA,mBAAOxB,EAAP,KAAYW,EAAZ,KAGA,EAAkCa,oBAAS,GAA3C,mBAAOhC,EAAP,KAAkBkC,EAAlB,KA2BA,OAzBAC,qBAAU,YACK,uCAAG,8BAAAC,EAAA,6DAChBF,GAAa,GADG,kBAGQG,MAAM7B,GAHd,YAGT8B,EAHS,QAIAC,GAJA,iCAKeD,EAASE,OALxB,OAKNC,EALM,OAMZxC,QAAQC,IAAIuC,GACZR,EAAQQ,GAPI,cAUR,IAAIC,MAAM,mBAVF,kCAYdzC,QAAQC,IAAR,MAZc,QAehBgC,GAAa,GAfG,0DAAH,qDAkBfS,KACC,CAACnC,IAMA,sBAAKsB,UAAU,MAAf,UACE,iDAEA,cAAC,EAAD,CAAW/B,KAAMA,EAAMS,IAAKA,EAAKW,OAAQA,EAAQC,MAAOA,EAAOC,SAAUA,OAEzE,cAAC,EAAD,CAAMtB,KAAMA,EAAMC,UAAWA,QChCpB4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aeb228a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TimeAgo from 'timeago-react'; \r\nimport \"./News.css\";\r\n\r\nexport default function News({ news, isLoading }) {\r\n  console.log(news)\r\n  return (\r\n    <div>\r\n        <h2>Results</h2>\r\n\r\n        {isLoading ? (\r\n         <div>Loading news...</div>\r\n        ) : ( \r\n        <ul>\r\n        {news.length!==0 && news.hits.map((newsPost) => (\r\n          <li key={newsPost.objectID}>\r\n              <a href={newsPost.url} target=\"_blank\" rel=\"noreferrer\">\r\n              {newsPost.title}\r\n              </a>\r\n              <div>\r\n                <span>{newsPost.points} points</span> | <span>{newsPost.author} | </span>   \r\n               <span><TimeAgo datetime={newsPost.created_at} /></span> | {newsPost.num_comments} comments</div>\r\n              <div></div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      )}\r\n    </div> \r\n    );\r\n}","import React from 'react';\r\nimport \"./Searchbar.css\";\r\n\r\nexport default function Searchbar({ setUrl, query, setQuery}) {\r\n    //const[inputValue, setInputValue] = useState( \" \");\r\n\r\n    function handleOnKeyDown({ keyCode }){\r\n        if(keyCode === 13) {\r\n          setUrl(`http://hn.algolia.com/api/v1/search?query=${query}`)\r\n      }\r\n    }\r\n\r\n    // function handleInputValue({target}){\r\n    //     setInputValue(target.value);\r\n    // }\r\n\r\n  //function compareInput(){\r\n    //let searchString = inputValue.toLowerCase().split(' ')\r\n    //console.log(news.hits.filter(string => {\r\n      //  let containsAtLeastOneWord = false;\r\n        // If at least a word is matched return it!\r\n        //searchString.forEach(word => {\r\n          //  if (string.title.toLowerCase().includes(word))\r\n            //    containsAtLeastOneWord = true;\r\n        //})\r\n        //if (containsAtLeastOneWord)\r\n          //  return string\r\n    //}));\r\n\r\n        // if(news.contains())\r\n        // const results = news.filter()\r\n  //}\r\n\r\n  return (\r\n    <div>\r\n        <input \r\n            onKeyDown={handleOnKeyDown} \r\n            onChange={event => setQuery(event.target.value)}\r\n            type=\"text\" \r\n            value={query}\r\n            placeholder=\"Search..\"/>\r\n        <button\r\n            type=\"button\"\r\n            onClick={() =>\r\n            setUrl(`http://hn.algolia.com/api/v1/search?query=${query}`)\r\n        }\r\n      >\r\n            <i className = \"fa fa-search\"></i>\r\n        </button>\r\n\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\nimport News from './components/News/News.js'\r\nimport Searchbar from './components/Searchbar/Searchbar.js'\r\n\r\nfunction App() {\r\n  const [news, setNews] = useState({ hits: []});\r\n  const [query, setQuery] = useState('');\r\n  const [url, setUrl] = useState(\r\n  'https://hn.algolia.com/api/v1/search?query=react',\r\n);\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getNews = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n     const response = await fetch(url)\r\n       if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        console.log(jsonResponse);\r\n        setNews(jsonResponse);\r\n        //return;\r\n      }\r\n      throw new Error(\"Request Failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  getNews();\r\n}, [url]);\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        HACKER NEWS\r\n      <Searchbar news={news} url={url} setUrl={setUrl} query={query} setQuery={setQuery}/>\r\n      </header>\r\n      <News news={news} isLoading={isLoading}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}