{"version":3,"sources":["components/News/News.js","components/Searchbar/Searchbar.js","App.js","reportWebVitals.js","index.js"],"names":["News","news","console","log","length","hits","map","newsPost","href","url","target","title","objectID","Searchbar","setUrl","query","setQuery","useState","onKeyDown","keyCode","onChange","event","value","type","placeholder","onClick","className","App","setNews","useEffect","a","fetch","response","ok","json","jsonResponse","Error","getNews","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGe,SAASA,EAAT,GAAuB,IAARC,EAAO,EAAPA,KAE5B,OADAC,QAAQC,IAAIF,GAEV,gCACI,uDACA,6BAEe,IAAdA,EAAKG,QAAcH,EAAKI,KAAKC,KAAI,SAACC,GAAD,OAChC,6BACI,mBAAGC,KAAMD,EAASE,IAAKC,OAAO,SAA9B,SACCH,EAASI,SAFLJ,EAASK,kB,MCRb,SAASC,EAAT,GAAyD,EAArCZ,KAAqC,EAA/BQ,IAAgC,IAA3BK,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACzD,EAAmCC,mBAAU,KAA7C,6BA6BF,OACE,gCAEI,uBACIC,UA/BR,YAA8C,IAAnBC,EAAkB,EAAlBA,QAAkB,EAATT,OACjB,KAAZS,GACDL,EAAO,6CAAD,OAA8CC,KA8BlDK,SAAU,SAAAC,GAAK,OAAIL,EAASK,EAAMX,OAAOY,QACzCC,KAAK,OACLD,MAAOP,EACPS,YAAY,aAChB,wBACID,KAAK,SACLE,QAAS,kBACTX,EAAO,6CAAD,OAA8CC,KAHxD,SAMI,mBAAGW,UAAY,sBCMZC,MAhDf,WACE,MAAwBV,mBAAS,CAAEZ,KAAM,KAAzC,mBAAOJ,EAAP,KAAa2B,EAAb,KACA,EAA0BX,mBAAS,SAAnC,mBAAOF,EAAP,KAAcC,EAAd,KACA,EAAsBC,mBACtB,oDADA,mBAAOR,EAAP,KAAYK,EAAZ,KAkCA,OAxBAe,qBAAU,YAEC,uCAAG,8BAAAC,EAAA,+EAEYC,MAAMtB,GAFlB,YAELuB,EAFK,QAIIC,GAJJ,iCAKmBD,EAASE,OAL5B,cAKFC,EALE,OAMRjC,QAAQC,IAAIgC,GACZP,EAAQO,GAPA,iCAUJ,IAAIC,MAAM,mBAVN,kCAYVlC,QAAQC,IAAR,MAZU,0DAAH,qDAgBXkC,KACC,CAAC5B,IAMA,sBAAKiB,UAAU,MAAf,UACE,iDAEA,cAAC,EAAD,CAAWzB,KAAMA,EAAMQ,IAAKA,EAAKK,OAAQA,EAAQC,MAAOA,EAAOC,SAAUA,OAEzE,cAAC,EAAD,CAAMf,KAAMA,QCrCHqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ff3767b8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./News.css\";\r\n\r\nexport default function News({news}) {\r\n  console.log(news)\r\n  return (\r\n    <div>\r\n        <h2>I am the news section</h2>\r\n        <ul>\r\n    \r\n        {news.length!==0 && news.hits.map((newsPost) => (\r\n          <li key={newsPost.objectID}>\r\n              <a href={newsPost.url} target=\"_blank\">\r\n              {newsPost.title}\r\n              </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport \"./Searchbar.css\";\r\n\r\nexport default function Searchbar({news, url, setUrl, query, setQuery}) {\r\n    const[inputValue, setInputValue] = useState( \" \");\r\n\r\n    function handleOnKeyDown({ keyCode, target }){\r\n        if(keyCode === 13) {\r\n          setUrl(`http://hn.algolia.com/api/v1/search?query=${query}`)\r\n      }\r\n    }\r\n\r\n    function handleInputValue({target}){\r\n        setInputValue(target.value);\r\n    }\r\n\r\n  //function compareInput(){\r\n    //let searchString = inputValue.toLowerCase().split(' ')\r\n    //console.log(news.hits.filter(string => {\r\n      //  let containsAtLeastOneWord = false;\r\n        // If at least a word is matched return it!\r\n        //searchString.forEach(word => {\r\n          //  if (string.title.toLowerCase().includes(word))\r\n            //    containsAtLeastOneWord = true;\r\n        //})\r\n        //if (containsAtLeastOneWord)\r\n          //  return string\r\n    //}));\r\n\r\n        // if(news.contains())\r\n        // const results = news.filter()\r\n  //}\r\n\r\n  return (\r\n    <div>\r\n\r\n        <input \r\n            onKeyDown={handleOnKeyDown} \r\n            onChange={event => setQuery(event.target.value)}\r\n            type=\"text\" \r\n            value={query}\r\n            placeholder=\"Search..\"/>\r\n        <button\r\n            type=\"button\"\r\n            onClick={() =>\r\n            setUrl(`http://hn.algolia.com/api/v1/search?query=${query}`)\r\n        }\r\n      >\r\n            <i className = \"fa fa-search\"></i>\r\n        </button>\r\n\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\n//import axios from \"axios\";\nimport './App.css';\nimport News from './components/News/News.js'\nimport Searchbar from './components/Searchbar/Searchbar.js'\n\nfunction App() {\n  const [news, setNews] = useState({ hits: []});\n  const [query, setQuery] = useState('redux');\n  const [url, setUrl] = useState(\n  'https://hn.algolia.com/api/v1/search?query=redux',\n);\n  //useEffect(() => {\n  //axios.get(`http://hn.algolia.com/api/v1/search?query=react`).then((res) => {\n  //   const newsArray = res.data.hits;\n\n  //   setNews(newsArray);\n  //  });\n  //}, []);\n  useEffect(() => {\n\nconst getNews = async () => {\n    try {\n     const response = await fetch(url)\n     //`http://hn.algolia.com/api/v1/search?query= + ${input.value}`\n       if (response.ok) {\n        const jsonResponse = await response.json();\n        console.log(jsonResponse);\n        setNews(jsonResponse);\n        return;\n      }\n      throw new Error(\"Request Failed!\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  getNews();\n}, [url]);\n  \n\n\n\n  return (\n    <div className=\"App\">\n      <header>\n        HACKER NEWS\n      <Searchbar news={news} url={url} setUrl={setUrl} query={query} setQuery={setQuery}/>\n      </header>\n      <News news={news} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}